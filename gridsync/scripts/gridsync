#!/usr/bin/env python2
# vim:fileencoding=utf-8:ft=python

from __future__ import unicode_literals

import os
import sys
import time

import wx

from gridsync.config import Config
from gridsync.tahoe import Tahoe
from gridsync.watcher import Watcher


TRAY_ICON = '../images/systray.png'

def create_menu_item(menu, label, func):
    item = wx.MenuItem(menu, -1, label)
    menu.Bind(wx.EVT_MENU, func, id=item.GetId())
    menu.AppendItem(item)
    return item


class TaskBarIcon(wx.TaskBarIcon):
    def __init__(self):
        super(TaskBarIcon, self).__init__()
        self.set_icon(TRAY_ICON)
        self.Bind(wx.EVT_TASKBAR_LEFT_DOWN, self.on_left_down)
    def CreatePopupMenu(self):
        menu = wx.Menu()
        create_menu_item(menu, 'Open', self.on_open)
        menu.AppendSeparator()
        create_menu_item(menu, 'Exit', self.on_exit)
        return menu
    def set_icon(self, path):
        icon = wx.IconFromBitmap(wx.Bitmap(path))
        self.SetIcon(icon, "Gridsync")
    def on_left_down(self, event):
        print 'Tray icon was left-clicked.'
    def on_open(self, event):
        print 'open'
    def on_exit(self, event):
        wx.CallAfter(self.Destroy)
        wx.GetApp().ExitMainLoop()
        #sys.exit()

class App(wx.App):
    def OnInit(self):
        self.SetTopWindow(wx.Frame(None, -1))
        TaskBarIcon()
        init()
        return True
    def onClose(self, evt):
        self.Destroy()
        wx.GetApp().ExitMainLoop()


def init():
    config = Config()
    settings = config.load()
    tahoe_objects = []
    watcher_objects = []
    for node_name, node_settings in settings['tahoe_nodes'].items():
        t = Tahoe(os.path.join(config.config_dir, node_name), node_settings)
        tahoe_objects.append(t)
        for sync_name, sync_settings in settings['sync'].items():
            if sync_settings[0] == node_name:
                w = Watcher(t, os.path.expanduser(sync_settings[1]), sync_settings[2])
                watcher_objects.append(w)

    for t in tahoe_objects:
        t.start()

    for w in watcher_objects:
        w.sync()
        w.start()
         
    try:
        while True:
            time.sleep(1)
    except KeyboardInterrupt:
        print('\nshutting down!')
        for w in watcher_objects:
            w.stop()
        for t in tahoe_objects:
            t.stop()
        config.save(settings)
        sys.exit()


if __name__ == "__main__":
    #if len(sys.argv) < 3:
    #    print()
    #    print("{} - synchronize local directories with Tahoe-LAFS storage grids".format(sys.argv[0]))
    #    print()
    #    print("Usage: {} <local dir> <remote URI>".format(sys.argv[0]))
    #    print()
    #else:
    app = App()
    app.MainLoop()

