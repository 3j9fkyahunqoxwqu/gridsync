sudo: required
dist: trusty
os:
  - "linux"
  - "osx"
install:
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then sudo apt-get update; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then sudo apt-get install -y qtbase5-dev python3-pyqt5 python3-pip; fi
  #- if [ "${TRAVIS_OS_NAME}" = "linux" ]; then PYTHON='python3' make pyqt 1>/dev/null; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then export PATH=/usr/bin:$PATH; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then python2 -m pip install --upgrade pip; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then sudo python3 -m pip install --upgrade pip; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then sudo python3 -m pip install tox coveralls; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then sudo make pyqt; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then brew update; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then brew upgrade pyenv; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then pyenv install --list; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then env PYTHON_CONFIGURE_OPTS="--enable-framework" pyenv install 2.7.13; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then env PYTHON_CONFIGURE_OPTS="--enable-framework" pyenv install 3.5.3; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then pyenv rehash; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then pyenv global 2.7.13 3.5.3; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then pyenv versions; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then export PATH=~/.pyenv/shims:$PATH; fi
  #- if [ "${TRAVIS_OS_NAME}" = "osx" ]; then brew install python pyqt5; fi
  #- if [ "${TRAVIS_OS_NAME}" = "osx" ]; then brew link --force qt5; fi
  #- if [ "${TRAVIS_OS_NAME}" = "osx" ]; then export PATH=/usr/local/bin:$PATH; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then python2 -m pip install --upgrade pip; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then python3 -m pip install --upgrade pip; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then python3 -m pip install tox coveralls; fi
  #- if [ "${TRAVIS_OS_NAME}" = "osx" ]; then make pyqt; fi
before_script:
  #- env
  - which python && python --version
  - which python2 && python2 --version
  - which python3 && python3 --version
  - which tox && tox --version
  #- python scripts/print_hashes.py .
script:
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then tox; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then ls -al build; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then sudo chown -R travis:travis build; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then make frozen; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then xvfb-run -a dist/Gridsync/gridsync --version; fi
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then xvfb-run -a dist/Gridsync/gridsync --tahoe-version; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then tox -e py35,flake8; fi
  #- if [ "${TRAVIS_OS_NAME}" = "osx" ]; then curl --create-dirs -o dist/Tahoe-LAFS.zip https://buildbot.gridsync.io/artifacts/Tahoe-LAFS-Mac.zip; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then make all; fi
  #- if [ "${TRAVIS_OS_NAME}" = "osx" ]; then python scripts/print_hashes.py dist; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then dist/Gridsync.app/Contents/MacOS/Gridsync --version; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then dist/Gridsync.app/Contents/MacOS/Gridsync --tahoe-version; fi
after_success:
  - coveralls
notifications:
  email: false
  irc:
    channels: "chat.freenode.net#gridsync"
    skip_join: true
    use_notice: true
    template:
      - "[%{repository_name}:%{branch}] %{commit}: %{commit_subject} (%{author}) %{message}"
      - "Details: %{build_url} | Changes: %{compare_url}"
before_deploy:
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then mv dist/Gridsync.zip dist/Gridsync-Linux.zip; fi
  - if [ "${TRAVIS_OS_NAME}" = "osx" ]; then mv dist/Gridsync.dmg dist/Gridsync-Mac.dmg; fi
deploy:
  provider: releases
  api_key:
    secure: hVOzLVw5sc2mrZJrm0mqZ7eYOI2CA2lAE0Hu8MAJPmOHlh40W0u6/QqPklzyD0jx/0jdhwiFPcSYFwNwqYEVrUQ4i2QdwN83aldzxkuykN+cgeon57yC/n0EFTx8RpjO+Erj67vhC7QCjjvTPuLY3SLZIAFYaMoAP120OxuCn3cYsDE2aXaapRZfoptCG4EZLlQkq6/TiU0rKGJhZFAEzSkeyyMu/dZLJAvZN1ImLExRE8zu9bfxgXF98H6JFWfCMeBY58UkuDoY87HVMlulZIQee2JKF2E/X+LtiwcOjTu1HBzPhLsqPQiJCtln6w2m8khrqsxCr2M+TgFrWTA3p8iI9LH8Xy8EzRnWsU/aBRaC3z5tVim6vIivLOQu1ooiMoQq3RXwSFyTLtyV77tOBfXc2C5FNwwMMbqGA+eMSEJZwdPlkWz578ohEYVSRXdi7gNLA+SCPGQ+lT/RgaVbvG249YosYIlS+R7vQiztatKQ/IuhOH4UrAVOmp3REapLMcl7I4MoEG2W38Al6ceeLaXiZttm4Qee7fYKkTe1y81kt0AXTMnOyy+I2VROmKdLaFEG1SY8XT93Mwdf8SEF7RSwBgtd87kYxPi3Dpa5pnznj6EjhEmVKd3I6r8Urqm+7X0WhO8z9OKDhtj9zSfqJsOokCgUb57JZBGochTmuR4=
  file_glob: true
  file: dist/Gridsync-*.*
  skip_cleanup: true
  prerelease: true
  on:
    tags: true
